<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.hospital.erp.board.club.ClubDAO">

<!-- 동호회 리스트 -->
<select id="clubList" parameterType="ClubVO">
		SELECT
		    C.CLUB_CD,
		    C.MEM_CD,
		    C.CLUB_TITLE,
		    C.CLUB_CONTENTS,
		    C.CLUB_PERSONNEL,
		    C.CLUB_STATUS,
		    C.CLUB_HIT,
		    C.CLUB_RDATE,
		    COUNT(CM.CM_CD) AS CURRENT_MEMBERS,
		    CONCAT(COUNT(CM.CM_CD), ' / ', C.CLUB_PERSONNEL) AS MEMBERS_STATUS,
		    M.MEM_NAME,
		    M.DEP_CD,
		    D.DEP_NAME
		FROM
		    CLUB C
		LEFT JOIN
		    CLUB_MEMBER CM ON C.CLUB_CD = CM.CLUB_CD
		LEFT JOIN
		    MEMBER M ON C.MEM_CD = M.MEM_CD
		LEFT JOIN
		    DEPARTMENT D ON M.DEP_CD = D.DEP_CD
		GROUP BY
		    C.CLUB_CD;

</select>


<!-- 사내동호회 상세조회 -->
<select id="clubData" parameterType="int" resultMap="clubResultMap">
		SELECT
		    C.*,
		    CF.*,
		    M.MEM_NAME,
		    M.DEP_CD,
		    D.DEP_NAME,
		    (
		        SELECT COUNT(CM.CM_CD)
		        FROM CLUB_MEMBER CM
		        WHERE C.CLUB_CD = CM.CLUB_CD
		    ) AS CURRENT_MEMBERS
		FROM
		    CLUB C
		LEFT JOIN
		    CLUB_MEMBER CM ON C.CLUB_CD = CM.CLUB_CD
		LEFT OUTER JOIN 
		    BOARD_FILE CF ON C.CLUB_CD = CF.BF_FK
		LEFT JOIN
		    MEMBER M ON C.MEM_CD = M.MEM_CD
		LEFT JOIN
		    DEPARTMENT D ON M.DEP_CD = D.DEP_CD
		WHERE
		    C.CLUB_CD = #{clubCd};
</select>


<!-- 해당동호회의 멤버 리스트  -->
<select id="clubMemberList" parameterType="ClubMemberVO">
		SELECT 
		    M.MEM_NAME,
		    M.DEP_CD,
		    D.DEP_NAME
		FROM 
		    MEMBER M
		INNER JOIN 
		    CLUB_MEMBER CM 
		ON 
		    M.MEM_CD = CM.MEM_CD
		INNER JOIN
		    DEPARTMENT D
		ON
		    M.DEP_CD = D.DEP_CD
		WHERE 
			CM.CLUB_CD = #{clubCd};
</select>


<!-- 해당 동호회 참여를 위한 가입되었는지 여부를 판단하는 메서드 -->
<select id="clubMemberCk" parameterType="ClubMemberVO" resultType="int">
		SELECT 
			COUNT(*) 
		FROM 
			CLUB_MEMBER
		WHERE 
			CLUB_CD = #{clubCd} 
		AND 
			MEM_CD = #{memCd}
		
</select>

<!-- 탈퇴 메서드 -->
<delete id="clubMemberDrop" parameterType="ClubMemberVO">
		DELETE 
		FROM 
			CLUB_MEMBER
   		WHERE 
   			CLUB_CD = #{clubCd}
    	AND 
    		MEM_CD = #{memCd}

</delete>

<resultMap id="clubResultMap" type="ClubVO">
   <id property="clubCd" column="CLUB_CD" />
    <result property="memCd" column="MEM_CD" />
    <result property="clubTitle" column="CLUB_TITLE" />
    <result property="clubContents" column="CLUB_CONTENTS" />
    <result property="clubPersonnel" column="CLUB_PERSONNEL" />
    <result property="clubStatus" column="CLUB_STATUS" />
    <result property="clubHit" column="CLUB_HIT" />
    <result property="clubRdate" column="CLUB_RDATE" />
    <result property="memName" column="MEM_NAME" />
    <result property="depCd" column="DEP_CD" />
    <result property="depName" column="DEP_NAME" />
    <result property="currentMembers" column="CURRENT_MEMBERS" />
    <collection property="list" ofType="ClubFileVO" javaType="list">
        <id column="bfCd" property="bfCd" />
        <result column="codeCd" property="codeCd" />
        <result column="bfFk" property="bfFk" />
        <result column="bfOname" property="bfOname" />
        <result column="bfFname" property="bfFname" />
        <result column="bfPath" property="bfPath" />
        <result column="bfExtension" property="bfExtension" />
        <result column="bfRdata" property="bfRdata" />
    </collection>
</resultMap>

<!-- 동호회 등록 -->
<insert id="clubInsert" parameterType="ClubVO" useGeneratedKeys="true" keyProperty="clubCd">
		INSERT 
			INTO 
		CLUB (
			MEM_CD, 
			CLUB_TITLE, 
			CLUB_CONTENTS, 
			CLUB_PERSONNEL, 
			CLUB_STATUS, 
			CLUB_HIT, 
			CLUB_RDATE
			)
	    VALUES (
	    	#{memCd}, 
	    	#{clubTitle}, 
	    	#{clubContents}, 
	    	#{clubPersonnel}, 
	    	0, 
	    	0, 
	    	NOW())
</insert>
<!-- CLUB_MEMBER 테이블에 등록자 추가 -->
<insert id="clubMemberInsert" parameterType="ClubMemberVO">
	    INSERT 
	    	INTO 
	    CLUB_MEMBER (
	    	MEM_CD, 
	    	CLUB_CD, 
	    	CM_RDATE
	    	)
	    VALUES (
	    	#{memCd}, 
	    	#{clubCd}, 
	    	NOW())
</insert>

<!--  사내동호회 업데이트  -->
<update id="clubUpdate" parameterType="ClubVO">
		UPDATE 
  			CLUB
	    SET
	        CLUB_TITLE = #{clubTitle},
	        CLUB_CONTENTS = #{clubContents},
	        CLUB_PERSONNEL = #{clubPersonnel}
	    WHERE CLUB_CD = #{clubCd}
</update>

<!-- 동호회 모집상태 업데이트 -->
<update id="clubStatusUpdate" parameterType="ClubVO">
		UPDATE
			CLUB
		SET
			CLUB_STATUS = #{clubStatus}
		WHERE
			CLUB_CD = #{clubCd}
</update>


<!-- 파일 업로드 쿼리문 -->
<insert id="fileInsert" parameterType="ClubFileVO">
		INSERT
			INTO 
		BOARD_FILE
			(BF_CD,
			 CODE_CD,
			 BF_FK,
			 BF_ONAME,
			 BF_FNAME,
			 BF_PATH,
			 BF_EXTENSION,
			 BF_RDATE)
		VALUES 
	    	(NULL,
	    	 #{codeCd},
	    	 #{bfFk},
	    	 #{bfOname},
	    	 #{bfFname}, 
	    	 #{bfPath}, 
	    	 #{bfExtension}, 
	    	 NOW())
</insert>


<!-- 사내동호회 파일 등록 -->
<select id="fileData" parameterType="int" resultType="ClubFileVO">
  		SELECT 
  			*
  		FROM
  			BOARD_FILE
  		WHERE 
  			BF_FK=#{clubCd}
  		AND 
  			CODE_CD = 11	
</select>


<!-- 파일 다운로드 -->
<select id="fileDown" parameterType="int" resultType="FileVO">

		SELECT 
  			*
  		FROM
  			BOARD_FILE
  		WHERE 
  			BF_CD=#{bfCd}
</select>

<!--fileDelete  -->
<delete id="fileDelete" parameterType="ClubFileVO">
		DELETE
		FROM 
		BOARD_FILE
		WHERE
			BF_CD = #{bfCd}
			
</delete>

<!-- 사내모임 조회수 -->
<update id="clubHitCount">
		UPDATE
			CLUB 
		SET 
			CLUB_HIT = CLUB_HIT + 1
		WHERE
			CLUB_CD = #{clubCd}
</update>

<!-- 동호회 삭제 메서드 -->
<delete id="clubDelete" parameterType="int">
    	DELETE
    		FROM
    	CLUB
    		WHERE 
    	CLUB_CD = #{clubCd}
</delete>




<!-- 댓글 -->

<!-- 댓글 리스트 -->
<select id="commentList" parameterType="CommentVO">
    SELECT
        C.COMM_CD,
        C.CLUB_CD,
        C.MEM_CD,
        C.COMM_CONTENTS,
        C.COMM_RDATE,
        M.MEM_NAME,
        M.DEP_CD,
        D.DEP_NAME
    FROM
        COMMENT C
    INNER JOIN
        MEMBER M ON C.MEM_CD = M.MEM_CD
    LEFT JOIN
        DEPARTMENT D ON M.DEP_CD = D.DEP_CD
    WHERE
        C.CLUB_CD = #{clubCd}
    ORDER BY
        C.COMM_RDATE DESC;
</select>

<!-- 댓글 상세정보 조회 -->
<select id="commentData" parameterType="int" resultType="CommentVO">
    SELECT
        C.COMM_CD,
        C.CLUB_CD,
        C.MEM_CD,
        C.COMM_CONTENTS,
        C.COMM_RDATE,
        M.MEM_NAME,
        M.DEP_CD,
        D.DEP_NAME
    FROM
        COMMENT C
    INNER JOIN
        MEMBER M ON C.MEM_CD = M.MEM_CD
    LEFT JOIN
        DEPARTMENT D ON M.DEP_CD = D.DEP_CD
    WHERE
        C.COMM_CD = #{commCd}
</select>

<!-- 댓글 등록 -->
<insert id="commentInsert" parameterType="CommentVO">
		INSERT 
			INTO 
		COMMENT (
			CLUB_CD, 
			MEM_CD, 
			COMM_CONTENTS,
			COMM_RDATE
			)
    	VALUES (
    		#{clubCd}, 
    		#{memCd}, 
    		#{commContents},
    		NOW()
    		)
</insert>



</mapper>